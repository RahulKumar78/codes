int main()
{   char ch;
    cin>>ch;
    (ch>='A'&&ch<='Z')?(cout << "uppercase" << endl):(cout << "lowercase" << endl);
    return 0;
}




int main()
{   int x,y,z,r;
    cin>>x>>y>>z;
    r=(x<y && x<z)?x:(y<z?y:z);
    cout<<r;
    return 0;
}



int main()
{   char ch;
    cin>>ch;
    if (ch=='!'||ch=='@'||ch=='#'||ch=='$'||ch=='%')
        cout<<"special character";
    else
        cout<<"normal character";
    return 0;
}




X=5;
Y=6;
Z=static_cast<float>(x)/y;




int main()
{   int arr[10],i;
    for(i=0;i<10;i++)
        cin>>arr[i];
    for(i=0;i<10;i++)
        if (arr[i]%2==0)
            cout<<arr[i]<<",pos:"<<i<<endl;
    return 0;
}




#include <iostream>
#include <stdlib.h>
using namespace std;

int main()
{   int arr[10],i;
    for(i=0;i<10;i++)
        arr[i]=rand() % 100;
    for(i=0;i<10;i++)
        if (arr[i]%2==0)
            cout<<arr[i]<<",pos:"<<i<<endl;
    return 0;
}




int main()
{   int arr[5][5],i,j;
for(j=0;j<5;j++)
    for(i=0;i<5;i++)
        arr[i][j]=rand() % 100;
for(j=1;j<5;j+=2)
    {cout<<"\nrow:"<<j;
    for(i=0;i<10;i++)
            cout<<arr[i][j]<<",col:"<<i<<"\t";
    }
    return 0;
}





int main()
{   char arr[5];
    cout<<"enter char\n";
    cin>>arr;
    cin.get(arr,5);
    cout<<arr<<endl;
    }
    return 0;
}





int main()
{   char arr[5];
    cout<<"enter char\n";
    cin.get(arr,5);
    for(int i=0;i<5;i++)
        if((arr[i]<='Z'&&arr[i]>='A'))
           arr[i]= 32+arr[i];
    cout<<arr<<endl;

    return 0;
}




int main()
{   char arr[5],i=0;
    cout<<"enter char\n";
    cin.get(arr,5);
   while(arr[i]!='\0')
    {
    if((arr[i]<='Z'&&arr[i]>='A'))
           arr[i]= 32+arr[i];
           i++;
    }
    cout<<arr<<endl;


    return 0;
}



#include <iostream>
#include<stdio.h>
#include<conio.h>
using namespace std;

int main()
{
    char pwd[20] ;
    char d ;
    int i = 0 ;
    cout << "Enter your password :";

    while((d = getch())!= '\r')
    {
        cout << "#";
        pwd[i] = d ;
        i++ ;
    }
    pwd[i]='\0';
    cout << endl << pwd << endl;
    return 0;
}




int main()
{
    char strNo[10];
    char d ;
    int pos , no ;
    pos = 0 ;
    cout << "Enter a no : ";
    while((d = getche())!= '\r')
    {
        if(d>='0' && d<= '9')
        {
            strNo[pos]= d ;
            pos++;
        }
        else
        {
            cout << endl << "Invalid input " << endl ;
        }
    }
    strNo[pos]= '\0';
    no = atoi(strNo);
    no = no+10;
    cout << endl << "no = " << no ;
    return 0;
}


accept string from user and check if it is palindrome no.



#include <iostream>

using namespace std;
#define ARRSIZE 20

int main()
{
    char str[ARRSIZE];
    int s, e, flag = 0;
    cout << "Enter a string : ";
    cin.get(str,ARRSIZE);

    //len
    e = 0 ;
    while( str[e] != '\0')
    {
        e++;
    }
    e-- ;
    for( s = 0 ; s < e ; s++, e--)
    {
        if( str[s]!= str[e])
        {
            flag = 1 ;
            break;
        }
    }

    if(flag == 0)
    {
        cout << "Palindrome" << endl ;
    }
    else
    {
        cout << "Not a Palindrome" << endl;
    }

    return 0;
}




int main()
{
    string str ;
    cout << "Enter a string : ";
    //cin >> str ;
    getline(cin,str);
    cout << "str  = " << str  << endl ;

    return 0;
}--
#include <iostream>
#include <string>
using namespace std;

int main()
{
    string s1 = "test";
    string s2 = "tests";
    string s3 = "demo ";
    s3 = s3 + s1 + s2 ;

    cout << s1 << endl << s2 << endl << s3;

    cout << "\nAre they Equal : " << ( s1 == s2 ) << endl ;

    return 0;
}



#include <iostream>
#include <string.h>
using namespace std;


int main()
{
   char str1[40], str2[10];
   cout << "Enter a string : ";
   cin.get(str1,40);
   cin.ignore(1);  
   cout << "Enter search word :";
   cin.get(str2,10);

   if(strstr(str1,str2)!= NULL)
   {
       cout << "Found";
   }
   else
   {
       cout << "Not Found";
   }
    return 0;
}







int rev(int num)
{   int n;
    while(num!=0)
    {n*=10;
     n+=num%10;
     num/=10;
    }

    return n;
}
int main()
{   int num;
    cout<<"enter a num:";
    cin>>num;
    cout<<rev(num);







#include <iostream>
#define ARRSIZE 12
using namespace std;

void Accept( int arr[] )
{
    for( int x = 0 ; x < ARRSIZE ; x++ )
    {
        arr[x] = x + 10;
    }
}

void Display(const int arr[] )
{
    for( int x = 0 ; x < ARRSIZE ; x++ )
    {
        cout << arr[x] << "\t";        
    }
}
int main()
{
    int arr[ARRSIZE];
    Accept( arr );
    Display( arr );

    return 0;
}




Q1.  Write the code to for accept and display logics  as separate functions.

Q2.  Enhance the above program (Q1) so that the program will be capable of accepting and displaying 5 employees 



#include <iostream>
using namespace std;
struct employee
{
    string name;
    int idno;
    float salary;
};
void display(employee e)
{
    cout<<"\n name:"<<e.name;
    cout<<"\n idno:"<<e.idno;
    cout<<"\n salary:"<<e.salary;
}
void accept(employee e)
{
    cout<<"\nenter name:";
    cin>>e.name;
    cout<<"\nenter idno:";
    cin>>e.idno;
    cout<<"\nenter salary:";
    cin>>e.salary;
    display(e);
}

int main()
{ employee e;
accept(e);


    return 0;
}





#include <iostream>
using namespace std;
struct employee
{
    string name;
    int idno;
    float salary;
};
void display(employee e[])
{   for(int i=0;i<5;i++)
    {cout<<"\n name:"<<e[i].name;
    cout<<"\n idno:"<<e[i].idno;
    cout<<"\n salary:"<<e[i].salary;
    }
}
void accept(employee e[])
{   for(int i=0;i<5;i++)
    {cout<<"\nenter name:";
    cin>>e[i].name;
    cout<<"\nenter idno:";
    cin>>e[i].idno;
    cout<<"\nenter salary:";
    cin>>e[i].salary;
    }
    

}

int main()
{ employee e[5];
accept(e);
display(e);

    return 0;
}


#include <iostream>
using namespace std;
struct employee
{
    string name;
    int idno;
    float salary;
};
void display(employee e)
{
    cout<<"\n name:"<<e.name;
    cout<<"\n idno:"<<e.idno;
    cout<<"\n salary:"<<e.salary;
}
employee accept()
{   employee e;
    cout<<"\nenter name:";
    cin>>e.name;
    cout<<"\nenter idno:";
    cin>>e.idno;
    cout<<"\nenter salary:";
    cin>>e.salary;
    return e;
}

int main()
{ employee e;
e=accept();
display(e);

    return 0;
}

#include <iostream>
#include <string>
#define ARRSIZE 3

using namespace std;

struct Employee
{
    int EmpId ;
    string EmpName ;
    int EmpAge;
};

void AcceptEmp( Employee e[] )
{
    for( int x = 0 ; x < ARRSIZE ; x++ )
    {
        cout << "\nEnter Emp Id : ";
        cin >> e[x].EmpId ;
        cin.ignore( 1 );
        cout << "\nEnter Emp Name :";
        getline( cin, e[x].EmpName );
        cout << "\nEnter Emp Age : ";
        cin >> e[x].EmpAge ;
    }
}

void Display( Employee e[] )
{
    for( int x = 0 ; x < ARRSIZE ; x++ )
    {
        cout << endl << e[x].EmpId << " , " << e[x].EmpName << " , " << e[x].EmpAge;
    }
}

int main()
{
    Employee e[ARRSIZE] ;
    AcceptEmp( e );
    Display( e );
    return 0;
}



#include <iostream>
#include <string>
#define ARRSIZE 3

using namespace std;
int main()
{
    char arr[20];
    char *ptr;
    cin>>arr;
    int x;
    ptr=&arr[0];
     while(*ptr!='\0')
     {
       cout<<*ptr;
       ptr++;
     }
    return 0;
}


int *p=NULL;



#include <iostream>
#include <string>

using namespace std;
void strCpy(char*destination,const char*source)
{
    while(*source!='\0')
    {
        *destination=*source;
        destination++;
        source++;
    }
    *destination='\0';
}
int main()
{
   char s[20],d[20];
   cout<<"enter a string:";
   cin.getline(s,20);
   strCpy(d,s);
   cout<<"output"<<d;
    return 0;
}



#include <iostream>
#include <string>

using namespace std;
int strLen(const char*source)
{   int len=0;
    while(*source!='\0')
    {
        len++;
        source++;
    }
    return len;
}
int main()
{
   char s[20];
   cout<<"enter a string:";
   cin.getline(s,20);
   cout<<"output"<<strLen(s);
    return 0;
}


#include <iostream>
#include <string>

using namespace std;
int main()
{
   int *ptr;
   ptr=new int(1);
   if(ptr==0)
   {
       cout<<"failed";
   }
   else{
    cout<<*ptr<<endl;
    delete ptr;
   }
    return 0;
}


#include <iostream>
#include <string>

using namespace std;
int main()
{
   char *ptr;
   ptr=new char(1);
   if(ptr==0)
   {
       cout<<"failed";
   }
   else{
        cout<<"enter astring";
    cin.get(ptr,20);
    cout<<ptr<<endl;
    delete []ptr;
   }
    return 0;
}


#include <iostream>
#include <vector>

using namespace std;


int main()
{
    vector<int>data ;
    for(int x = 0 ; x < 10 ; x++)
    {
        //data.insert(data.begin()+x, x);
        data.push_back(x);
    }
    cout << endl << " Size = " << data.size() << endl;
    for( int x = 0; x < data.size() ; x++)
    {
        cout << data[x] << endl ;
    }
    data.push_back(20);
    cout << endl << " Size = " << data.size() << endl;
    return 0;
}


#include <iostream>
#include <vector>

using namespace std;

void Swap( int *x , int *y)
{
    int t = *x ;
    *x = *y ;
    *y = t ;
}

void SwapRef( int &x , int &y)
{
    int t = x ;
    x = y ;
    y  = t ;
}

int main()
{
    int a , b ;
    a = 10;
    b = 20 ;
    Swap(&a , &b);
    cout << "a = " << a <<  " b = " << b << endl ;
    SwapRef(a,b);
    cout << "a = " << a <<  " b = " << b << endl ;
    return 0;
}



#include <iostream>

using namespace std;

class Employee
{
private :
    int EmpId ;
    string EmpName ;
    int EmpAge ;
public :
    Employee()
    {
        EmpId = 0 ;
        EmpName = "" ;
        EmpAge = 0 ;
        cout << "CTOR Called" << endl;
    }
    void SetEmployee( int id, string name, int age ) ;
    void GetEmployee();
};

void Employee :: SetEmployee( int id, string name, int age )
{
    EmpId = id ;
    EmpName = name ;
    EmpAge  = age ;
}

void Employee :: GetEmployee()
{
    cout << EmpId << " , " << EmpName << " , " << EmpAge << endl ;
}

int main()
{
    Employee  emp ;
    //emp.SetEmployee( 1, "Ganesh", 23 );
    emp.GetEmployee();

    return 0;
}


#include <iostream>
#include <string>
using namespace std;

class MyMath
{
private :
    MyMath(){}
public :
    static int Power( int b , int p)
    {
        int r = 1;
        while( p > 0 )
        {
            r = r * b ;
            p--;
        }
        return r ;
    }
};


int main()
{
    cout << MyMath::Power(2,3);

    return 0;
}




}
